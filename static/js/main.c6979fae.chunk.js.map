{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","value","initialValue","query","status","filterReducer","values","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","item","dispatch","className","cn","id","completed","title","onClick","TodoAction","TodoList","filteredTodos","preparedTodos","toLowerCase","includes","prepareTodos","length","map","TodoFilter","onSubmit","event","preventDefault","onChange","FilterActions","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","loading","setLoading","useEffect","userId","finally","href","name","App","data","TodosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6979fae.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type SetStatus = {\n  type: 'status/SET';\n  payload: string;\n};\n\ntype SetQuery = {\n  type: 'query/SET';\n  payload: string;\n};\n\ntype RemoveQuery = {\n  type: 'query/REMOVE';\n};\n\nconst setStatus = (value: string): SetStatus => ({\n  type: 'status/SET',\n  payload: value,\n});\n\nconst setQuery = (value: string): SetQuery => ({\n  type: 'query/SET',\n  payload: value,\n});\n\nconst removeQuery = (): RemoveQuery => ({\n  type: 'query/REMOVE',\n});\n\nexport const actions = { setStatus, setQuery, removeQuery };\n\nconst initialValue = {\n  query: '',\n  status: 'all',\n};\n\ntype Initial = {\n  query: string,\n  status: string,\n};\n\ntype Action = SetStatus | SetQuery | RemoveQuery;\n\nconst filterReducer = (values: Initial = initialValue, action: Action) => {\n  switch (action.type) {\n    case 'status/SET':\n      return { ...values, status: action.payload };\n    case 'query/SET':\n      return { ...values, query: action.payload };\n    case 'query/REMOVE':\n      return { ...values, query: '' };\n    default:\n      return values;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodos = {\n  type: 'todos/ADD';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodos => ({\n  type: 'todos/ADD',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\nconst initialValue: Todo[] = [];\n\nconst todosReducer = (\n  todos: Todo[] = initialValue, action: SetTodos,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return [...todos, ...action.payload];\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as TodoAction } from '../../features/currentTodo';\n\ninterface Props{\n  item: Todo;\n}\n\nexport const TodoItem: React.FC<Props> = ({ item }) => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const checkIfSelected = (todo: Todo) => {\n    if (currentTodo?.id === todo.id) {\n      dispatch(TodoAction.removeTodo());\n\n      return;\n    }\n\n    dispatch(TodoAction.setTodo(todo));\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': currentTodo?.id === item.id,\n      })}\n    >\n      <td className=\"is-vcentered\">{item.id}</td>\n      {!item.completed\n        ? (\n          <td className=\"is-vcentered\" />\n        )\n        : (\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </td>\n        )}\n      <td className=\"is-vcentered\" />\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !item.completed,\n            'has-text-success': item.completed,\n          })}\n        >\n          {item.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => checkIfSelected(item)}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye': currentTodo?.id !== item.id,\n              'fa-eye-slash': currentTodo?.id === item.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { TodoItem } from '../TodoItem';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const { status, query } = useAppSelector(state => state.filter);\n\n  const prepareTodos = () => {\n    let preparedTodos = [] as Todo[];\n\n    switch (status) {\n      case 'all':\n      default:\n        preparedTodos = [...todos];\n        break;\n      case 'active':\n        preparedTodos = todos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        preparedTodos = todos.filter(todo => todo.completed);\n        break;\n    }\n\n    if (query) {\n      return preparedTodos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    return preparedTodos;\n  };\n\n  const filteredTodos = prepareTodos();\n\n  return (\n    <>\n      {filteredTodos.length === 0\n        ? (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        ) : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {filteredTodos.map(todo => (\n                <TodoItem\n                  item={todo}\n                  key={todo.id}\n                />\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as FilterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query } = useAppSelector(state => state.filter);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={\n              (event) => dispatch(FilterActions.setStatus(event.target.value))\n            }\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={\n            event => dispatch(FilterActions.setQuery(event.target.value))\n          }\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(FilterActions.removeQuery())}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { actions as TodoAction } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const [user, setUser] = useState<User>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${currentTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => dispatch(TodoAction.removeTodo())}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {currentTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {currentTodo?.completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  )\n                  : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )}\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as TodosActions } from './features/todos';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then((data: Todo[]) => dispatch(TodosActions.setTodos(data)))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              {!loading && <TodoFilter /> }\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader /> }\n              {!loading && <TodoList /> }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}